generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accion_comercial {
  id_accion_comercial Int       @id @default(autoincrement())
  tipo_accion         String?   @db.VarChar(30)
  id_contacto         Int?
  id_lead             Int?
  id_cita             Int?
  asesor_id           Int
  estado              String?   @db.VarChar(30)
  fecha_accion        DateTime? @default(now()) @db.Timestamp(6)
  nota                String
  id_tarea            Int?
  persona             persona   @relation(fields: [asesor_id], references: [id_persona], onDelete: Cascade, onUpdate: NoAction)
  cita                cita?     @relation(fields: [id_cita], references: [id_cita], onDelete: Cascade, onUpdate: NoAction)
  contacto            contacto? @relation(fields: [id_contacto], references: [id_contacto], onDelete: Cascade, onUpdate: NoAction)
  lead                lead?     @relation(fields: [id_lead], references: [id_lead], onDelete: Cascade, onUpdate: NoAction)
  tarea               tarea?    @relation(fields: [id_tarea], references: [id_tarea], onDelete: Cascade, onUpdate: NoAction, map: "fk_accion_comercial_tarea")
}

model campanha {
  id_campanha     Int       @id @default(autoincrement())
  nombre_campanha String    @db.VarChar(100)
  descripcion     String?
  fecha_creacion  DateTime? @default(now()) @db.Timestamp(6)
  estado_campanha String?   @default("activa") @db.VarChar(25)
  mensaje_cliente String?
  fecha_inicio    DateTime? @default(now()) @db.Timestamp(6)
  fecha_fin       DateTime? @db.Timestamp(6)
  num_clientes    Int?      @default(0)
  tipo            String    @default("in") @db.VarChar(10)
  id_template     Int?
  template        template? @relation(fields: [id_template], references: [id_template], onUpdate: NoAction)
}

model cita {
  id_cita          Int                @id @default(autoincrement())
  id_contacto      Int
  tipo             String             @db.VarChar(100)
  fecha_programada DateTime           @db.Timestamptz(6)
  estado           String             @default("agendada") @db.VarChar(100)
  notas            String?
  fecha_creacion   DateTime           @default(now()) @db.Timestamp(6)
  accion_comercial accion_comercial[]
  contacto         contacto           @relation(fields: [id_contacto], references: [id_contacto], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model cliente_campanha {
  id_cliente_campanha Int       @id @default(autoincrement())
  id_contacto         Int
  id_campanha         Int
  fecha_asociacion    DateTime? @default(now()) @db.Timestamp(6)
  whatsapp_message_id String?   @db.VarChar(200)
  estado_mensaje      String?   @db.VarChar(50)
  fecha_envio         DateTime? @db.Timestamp(6)
  fecha_ultimo_estado DateTime? @db.Timestamp(6)
  message_status      String?   @db.VarChar(20)
  error_code          Int?
  last_update         DateTime? @default(now()) @db.Timestamp(6)
}

model contacto {
  id_contacto              Int                @id @default(autoincrement())
  rol_contacto             String             @default("apoderado") @db.VarChar(100)
  nombres                  String             @db.VarChar(100)
  apellidos                String?            @db.VarChar(100)
  telefono                 String?            @unique(map: "uq_contacto_tel") @db.VarChar(20)
  correo                   String?            @unique(map: "uq_contacto_correo") @db.VarChar(120)
  distrito                 String?            @db.VarChar(120)
  estado                   String?            @db.VarChar(30)
  puntaje_nse              Int?
  banda_nse                String?            @db.VarChar(100)
  puntaje_interes          Int?
  banda_interes            String?            @db.VarChar(100)
  fecha_nacimiento         DateTime?          @db.Date
  no_contactar             Boolean            @default(false)
  whatsapp_opt_in          DateTime?          @db.Timestamp(6)
  extra                    Json?
  segmento                 String?            @db.VarChar(50)
  fecha_creacion           DateTime           @default(now()) @db.Timestamp(6)
  prioridad                Int?
  fecha_ultima_interaccion DateTime?          @db.Timestamp(6)
  accion_comercial         accion_comercial[]
  cita                     cita[]
  datos_contacto           datos_contacto?
  lead                     lead[]
  lead_contacto            lead_contacto[]
  tarea                    tarea[]

  @@index([fecha_ultima_interaccion(sort: Desc)], map: "sor_contacto_fui_idx")
}

model historico_contacto_estado {
  id_historico_contacto_estado Int       @id @default(autoincrement())
  id_contacto                  Int
  estado                       String    @db.VarChar(25)
  fecha_estado                 DateTime? @default(now()) @db.Timestamp(6)
  detalle                      String?
}

model historico_lead_estado {
  id_historico_lead_estado Int       @id @default(autoincrement())
  id_lead                  Int
  estado                   String    @db.VarChar(25)
  fecha_estado             DateTime? @default(now()) @db.Timestamp(6)
  detalle                  String?
}

model historico_segmento_estado {
  id_historico_contacto_estado Int       @id @default(autoincrement())
  id_contacto                  Int
  segmento                     String    @db.VarChar(50)
  fecha_estado                 DateTime? @default(now()) @db.Timestamp(6)
  detalle                      String?
}

model instrumento {
  id_instrumento   Int                @id @default(autoincrement())
  nombre           String             @unique @db.VarChar(100)
  lead_instrumento lead_instrumento[]
}

model lead {
  id_lead             Int                @id @default(autoincrement())
  id_sede             Int?
  id_contacto         Int?
  fecha_creacion      DateTime           @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime           @default(now()) @db.Timestamp(6)
  etapa               String             @default("nuevo") @db.VarChar(100)
  fuente              String?            @db.VarChar(100)
  canal_primero       String?            @db.VarChar(100)
  canal_ultimo        String?            @db.VarChar(100)
  ultima_interaccion  DateTime?          @db.Timestamp(6)
  nombre              String?            @db.VarChar(100)
  apellidos           String?            @db.VarChar(100)
  interes             String?            @db.VarChar(100)
  precio_confirmado   Boolean?
  id_hubspot          String?            @db.VarChar(100)
  cluster             String?            @db.VarChar(100)
  colegio             String?            @db.VarChar(160)
  estado              String?            @db.VarChar(30)
  notas               String?
  accion_comercial    accion_comercial[]
  contacto            contacto?          @relation(fields: [id_contacto], references: [id_contacto], onUpdate: NoAction)
  sede                sede?              @relation(fields: [id_sede], references: [id_sede], onUpdate: NoAction)
  lead_contacto       lead_contacto[]
  lead_instrumento    lead_instrumento[]
}

model lead_contacto {
  id_lead     Int
  id_contacto Int
  relacion    String?  @db.VarChar(100)
  contacto    contacto @relation(fields: [id_contacto], references: [id_contacto], onDelete: Cascade, onUpdate: NoAction)
  lead        lead     @relation(fields: [id_lead], references: [id_lead], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_lead, id_contacto])
}

model lead_instrumento {
  id_lead        Int
  id_instrumento Int
  instrumento    instrumento @relation(fields: [id_instrumento], references: [id_instrumento], onDelete: Cascade, onUpdate: NoAction)
  lead           lead        @relation(fields: [id_lead], references: [id_lead], onDelete: Cascade, onUpdate: NoAction)

  @@id([id_lead, id_instrumento])
}

model persona {
  id_persona       Int                @id @default(autoincrement())
  id_usuario       Int                @unique
  nombres          String             @db.VarChar(120)
  apellidos        String             @db.VarChar(120)
  celular          String?            @db.VarChar(12)
  num_leads        Int?               @default(0)
  accion_comercial accion_comercial[]
  usuario          usuario            @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade, onUpdate: NoAction)
}

model rol {
  id_rol      Int       @id @default(autoincrement())
  nombre      String    @unique @db.VarChar(100)
  descripcion String?   @db.VarChar(255)
  usuario     usuario[]
}

model sede {
  id_sede   Int     @id @default(autoincrement())
  nombre    String  @db.VarChar(120)
  distrito  String? @db.VarChar(120)
  direccion String? @db.VarChar(200)
  activo    Boolean @default(true)
  lead      lead[]
}

model template {
  id_template          Int        @id @default(autoincrement())
  nombre               String     @db.VarChar(100)
  mensaje              String
  created_at           DateTime   @default(now()) @db.Timestamp(6)
  template_content_sid String     @default("") @db.VarChar(120)
  parametro            Boolean    @default(false)
  campanha             campanha[]
}

model usuario {
  id_usuario     Int      @id @default(autoincrement())
  username       String   @db.VarChar(120)
  correo         String   @unique @db.VarChar(120)
  password       String   @db.VarChar(255)
  id_rol         Int?
  activo         Boolean  @default(true)
  fecha_creacion DateTime @default(now()) @db.Timestamp(6)
  persona        persona?
  rol            rol?     @relation(fields: [id_rol], references: [id_rol], onUpdate: NoAction)
}

model tarea {
  id_tarea            Int                @id @default(autoincrement())
  id_contacto         Int
  estado_bot          String?            @db.VarChar(50)
  fecha_creacion      DateTime?          @default(now()) @db.Timestamp(6)
  fecha_actualizacion DateTime?          @default(now()) @db.Timestamp(6)
  estado_tarea        String?            @db.VarChar(50)
  accion_comercial    accion_comercial[]
  contacto            contacto           @relation(fields: [id_contacto], references: [id_contacto], onDelete: NoAction, onUpdate: NoAction)
}

model datos_contacto {
  id_contacto              Int       @id
  residencia_distrito      String?   @db.VarChar(120)
  colegio                  String?   @db.VarChar(160)
  edad_exacta              Int?
  experiencia_musical      Boolean?
  instrumento_en_casa      Boolean?
  familiar_interes_musical Boolean?
  acepta_agendar           Boolean?
  propone_horario          String?   @db.VarChar(120)
  telefono_alterno         String?   @db.VarChar(20)
  pregunta_precios         Boolean?
  pregunta_horarios        Boolean?
  completo_formulario      Boolean?
  apoderado_interesado     Boolean?
  fuente_lead              String?   @db.VarChar(120)
  canal_contacto           String?   @db.VarChar(120)
  participacion_previa     Boolean?
  palabras_clave           String?
  rechazos                 Int?      @default(0)
  posposiciones            Int?      @default(0)
  sin_respuesta_48h        Boolean?  @default(false)
  fecha_creacion           DateTime? @default(now()) @db.Timestamp(6)
  fecha_actualizacion      DateTime? @default(now()) @db.Timestamp(6)
  contacto                 contacto  @relation(fields: [id_contacto], references: [id_contacto], onDelete: Cascade, onUpdate: NoAction)
}

model mensaje_out {
  id_msg        String   @id
  phone_to      String
  template_name String
  template_lang String
  campanha_id   String?
  sent_at       DateTime @default(now()) @db.Timestamp(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model mensaje_status_event {
  id                BigInt   @id @default(autoincrement())
  id_msg            String
  estado            String
  ts_unix           BigInt?
  recipient_id      String?
  pricing_json      Json?
  conversation_json Json?
  errors_json       Json?
  created_at        DateTime @default(now()) @db.Timestamp(6)
}
